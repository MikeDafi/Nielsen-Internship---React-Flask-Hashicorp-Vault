{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\CreateAPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\";\nconst VAULT_URL = \"http://localhost:8200\";\n\nfunction CreateAPolicy(props) {\n  _s();\n\n  const [nameOfPolicy, setName] = React.useState(\"\");\n  const [secretPath, setSecretPath] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [secretPathError, setSecretError] = React.useState(\"\");\n  const [checkedError, setCheckedError] = React.useState(\"\");\n  const [checkedCategories, setChecked] = React.useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = checkedCategories.indexOf(value);\n    const newChecked = [...checkedCategories];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (nameOfPolicy === \"\") {\n      setNameError(\"There's an issue with the name\");\n      return;\n    } else {\n      setNameError(\"\");\n    }\n\n    if (secretPath === \"\") {\n      setSecretError(\"There's an issue with the policy\");\n      return;\n    } else {\n      setSecretError(\"\");\n    }\n\n    if (checkedCategories.length == 0) {\n      setCheckedError(\"You must select at least one permission\");\n      return;\n    } else {\n      setCheckedError(\"\");\n    }\n\n    const mapToCapabilities = {\n      0: '\\\\\"create\\\\\"',\n      1: '\\\\\"read\\\\\"',\n      2: '\\\\\"update\\\\\"',\n      3: '\\\\\"delete\\\\\"'\n    };\n    alert(checkedCategories);\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        policy: '#\\\\npath \\\\\"' + secretPath + '\\\\\" {\\\\n  capabilities = [' + mapToCapabilities[checkedCategories[0]] + checkedCategories.map((e, i) => i > 0 ? mapToCapabilities[e] : \"\") + ']\\\\n}'\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    };\n    await fetch('/policies?VAULT_TOKEN=' + props.token + '&policyLabel=' + nameOfPolicy, requestOptions);\n    props.refreshData();\n    setName(\"\");\n    setSecretPath(\"\");\n    setChecked([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 15\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 30,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Create/Update a Policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => handleSubmit(event),\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        height: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"policyInput\",\n        onChange: event => setName(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Name of Policy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          value: nameOfPolicy,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), nameError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 38\n        }, this)]\n      }, \"policyInput\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"pathInput\",\n        onChange: event => setSecretPath(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Secret Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"e.g. secret/foo/*\",\n          value: secretPath,\n          onChange: event => setSecretPath(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), secretPathError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: secretPathError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }, this)]\n      }, \"pathInput\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: \"hidden\",\n            whiteSpace: \"nowrap\",\n            color: \"black\",\n            marginRight: 15\n          },\n          children: \"Secret Permissions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [[0, 1].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 50,\n                textAlign: \"center\"\n              },\n              children: [value == 0 && \"Create\", value == 1 && \"Read\", value == 2 && \"Update\", value == 3 && \"Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checkedCategories.indexOf(value) !== -1,\n              onChange: () => handleToggle(value),\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)), [2, 3].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: 50,\n                textAlign: \"center\"\n              },\n              children: [value == 0 && \"Create\", value == 1 && \"Read\", value == 2 && \"Update\", value == 3 && \"Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checkedCategories.indexOf(value) !== -1,\n              onChange: () => {\n                handleToggle(value);\n              },\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), checkedError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: checkedError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          width: 100,\n          height: 40,\n          marginTop: 30\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateAPolicy, \"SXZGQDDlpfopb+lgX2d6l7ZLoQA=\");\n\n_c = CreateAPolicy;\nexport default CreateAPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAPolicy\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/CreateAPolicy.js"],"names":["React","useState","useEffect","Form","Button","Checkbox","VAULT_TOKEN","VAULT_URL","CreateAPolicy","props","nameOfPolicy","setName","secretPath","setSecretPath","nameError","setNameError","secretPathError","setSecretError","checkedError","setCheckedError","checkedCategories","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleSubmit","event","preventDefault","length","mapToCapabilities","alert","requestOptions","method","body","JSON","stringify","policy","map","e","i","headers","fetch","token","refreshData","marginLeft","fontSize","color","textAlign","fontWeight","display","flexDirection","height","target","marginRight","overflow","whiteSpace","alignItems","justifyContent","width","marginTop"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\"\r\nconst VAULT_URL = \"http://localhost:8200\"\r\nfunction CreateAPolicy(props) {\r\n  const [nameOfPolicy,setName] = React.useState(\"\")\r\n  const [secretPath,setSecretPath] = React.useState(\"\")\r\n  const [nameError,setNameError] = React.useState(\"\")\r\n  const [secretPathError,setSecretError] = React.useState(\"\")\r\n  const [checkedError,setCheckedError] = React.useState(\"\")\r\n  const [checkedCategories,setChecked] = React.useState([])\r\n\r\n  const handleToggle = (value) => {\r\n    const currentIndex = checkedCategories.indexOf(value);\r\n    const newChecked = [...checkedCategories];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n\r\n    async function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(nameOfPolicy === \"\"){setNameError(\"There's an issue with the name\");return;}else{setNameError(\"\")}\r\n        if(secretPath === \"\"){setSecretError(\"There's an issue with the policy\");return;}else{setSecretError(\"\")}\r\n        if(checkedCategories.length == 0){setCheckedError(\"You must select at least one permission\");return;}else{setCheckedError(\"\")}\r\n        const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\r\n        alert(checkedCategories)\r\n        const requestOptions = {\r\n            method:'POST',\r\n            body:JSON.stringify({\r\n                                policy:'#\\\\npath \\\\\"'+secretPath+'\\\\\" {\\\\n  capabilities = ['+ (mapToCapabilities[checkedCategories[0]]) + checkedCategories.map((e,i) => i > 0 ? (mapToCapabilities[e]) : \"\")+']\\\\n}'}),\t\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }\r\n        }\r\n        await fetch('/policies?VAULT_TOKEN='+props.token+'&policyLabel='+nameOfPolicy, requestOptions)\r\n        props.refreshData();\r\n        setName(\"\")\r\n        setSecretPath(\"\")\r\n        setChecked([])\r\n    }\r\n\r\n  return (\r\n      <div style={{marginLeft:15}} >\r\n        <p style={{fontSize:30,color:\"black\",textAlign:\"left\",fontWeight:500}}>Create/Update a Policy</p>\r\n        <Form onSubmit={(event) => handleSubmit(event)} style={{display:\"flex\",flexDirection:\"row\",height:100}}>\r\n            <Form.Group key={\"policyInput\"}controlId=\"policyInput\" onChange={(event) => setName(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:30}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Name of Policy: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={nameOfPolicy}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                />\r\n                {nameError != \"\" &&  <p style={{color:\"red\",fontSize:15}}>{nameError}</p>}\r\n            </Form.Group>\r\n            <Form.Group key={\"pathInput\"} controlId=\"pathInput\" onChange={(event) => setSecretPath(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:20}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Secret Path: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"e.g. secret/foo/*\"\r\n                    value={secretPath}\r\n                    onChange={(event) => setSecretPath(event.target.value)}\r\n                />\r\n                {secretPathError !== \"\" &&  <p style={{color:\"red\",fontSize:15}}>{secretPathError}</p>}\r\n            </Form.Group>\r\n            <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                    Secret Permissions: \r\n                </div>\r\n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\r\n                {[0,1].map((value) => \r\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                        <div style={{width:50,textAlign:\"center\"}}>{value == 0 && \"Create\"}{value == 1 && \"Read\"}{value == 2 && \"Update\"}{value == 3 && \"Delete\"}</div>\r\n                        <Checkbox\r\n                            checked={checkedCategories.indexOf(value) !== -1}\r\n                            onChange={() => handleToggle(value)}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>)}\r\n                {[2,3].map((value) => \r\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                        <div style={{width:50,textAlign:\"center\"}}>{value == 0 && \"Create\"}{value == 1 && \"Read\"}{value == 2 && \"Update\"}{value == 3 && \"Delete\"}</div>\r\n                        <Checkbox\r\n                            checked={checkedCategories.indexOf(value) !== -1}\r\n                            onChange={() => {handleToggle(value)}}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>)}\r\n                </div>\r\n                {checkedError !== \"\" &&  <p style={{color:\"red\",fontSize:15}}>{checkedError}</p>}\r\n\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40,marginTop:30}}>\r\n                Submit\r\n            </Button>\r\n            {/* {error == true && <p style={{color:\"red\",fontSize:15}}>There was an error with the token. Try again.</p>} */}\r\n        </Form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CreateAPolicy;\r\n "]},"metadata":{},"sourceType":"module"}