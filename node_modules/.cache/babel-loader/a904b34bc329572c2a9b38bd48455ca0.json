{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\ScrollableList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport SearchBar from \"material-ui-search-bar\";\nimport { ListSubheader } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    maxHeight: 300,\n    marginTop: -40\n  },\n  orange: {\n    backgroundColor: \"blue\"\n  }\n}));\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 199\n}];\nexport default function CheckboxListSecondary() {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [list, setList] = React.useState(top100Films);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  function searchResults(searchValue) {\n    if (searchValue == \"\") {\n      setList(top100Films);\n      return;\n    }\n\n    const sett = {};\n\n    for (var i = 0; i < top100Films.length; i++) {\n      console.log(top100Films[i]);\n\n      if (top100Films[i].title.includes(searchValue)) {\n        sett[top100Films[i].year] = top100Films[i];\n      }\n    }\n\n    ;\n    setList(Object.values(sett));\n    console.log(list);\n    console.log(sett);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      value: searchValue,\n      onChange: newValue => {\n        setSearchValue(newValue);\n      },\n      onRequestSearch: () => searchResults(searchValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), list.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        visibility: \"hidden\"\n      },\n      children: list[0].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 47\n      }, this),\n      children: [list.length == 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          justifyContent: \"center\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"No Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), list.map(value => {\n        console.log(\"value\");\n        console.log(value);\n        const labelId = `checkbox-list-secondary-label-${value.year}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.orange,\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"end\",\n              onChange: handleToggle(value),\n              checked: checked.indexOf(value) !== -1,\n              inputProps: {\n                'aria-labelledby': labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, value.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxListSecondary, \"bMlM+G8Dhox2spHWVva2nIf+V0c=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxListSecondary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxListSecondary\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/ScrollableList.js"],"names":["React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","SearchBar","ListSubheader","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","overflow","maxHeight","marginTop","orange","top100Films","title","year","CheckboxListSecondary","classes","checked","setChecked","useState","searchValue","setSearchValue","list","setList","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","searchResults","sett","i","length","console","log","includes","Object","values","newValue","visibility","justifyContent","textAlign","map","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nimport { ListSubheader } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow:\"auto\",\r\n    maxHeight:300,\r\n    marginTop:-40\r\n  },\r\n  orange:{\r\n    backgroundColor:\"blue\"\r\n  }\r\n}));\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 199 }]\r\n\r\nexport default function CheckboxListSecondary() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([1]);\r\n  const [searchValue,setSearchValue] = React.useState(\"\");\r\n  const [list,setList] = React.useState(top100Films);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  function searchResults(searchValue){\r\n    if(searchValue == \"\"){setList(top100Films); return;}\r\n    const sett = {}\r\n    for(var i = 0; i < top100Films.length;i++){\r\n      console.log(top100Films[i])\r\n      if(top100Films[i].title.includes(searchValue)){\r\n        sett[top100Films[i].year] = top100Films[i]\r\n      }\r\n    };\r\n    setList(Object.values(sett))\r\n    console.log(list)\r\n    console.log(sett)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  <SearchBar\r\n    value={searchValue}\r\n    onChange={(newValue) => { setSearchValue(newValue)}}\r\n    onRequestSearch={() => searchResults(searchValue)}\r\n  />\r\n    {list.length > 0 && <p style={{visibility:\"hidden\"}}>{list[0].title}</p>}\r\n    <List className={classes.root} subheader={<li />}>\r\n      {list.length == 0 && \r\n      <ListItem style={{justifyContent:\"center\",textAlign:\"center\"}}>\r\n      <ListItemText primary={\"No Results\"} />\r\n      </ListItem>}\r\n      {list.map((value) => {\r\n        console.log(\"value\")\r\n        console.log(value)\r\n        const labelId = `checkbox-list-secondary-label-${value.year}`;\r\n        return (\r\n          <ListItem key={value.year} button>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.orange}>B</Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={value.title} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}