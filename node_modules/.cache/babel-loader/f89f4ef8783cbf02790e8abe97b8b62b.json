{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\ScrollableList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ListSubheader } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    maxHeight: 300\n  },\n  orange: {\n    backgroundColor: \"blue\"\n  }\n}));\nexport default function CheckboxListSecondary() {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n  const top100Films = [{\n    title: 'The Shawshank Redemption',\n    year: 1994\n  }, {\n    title: 'The Godfather',\n    year: 1972\n  }, {\n    title: 'The Godfather: Part II',\n    year: 1974\n  }, {\n    title: 'The Dark Knight',\n    year: 2008\n  }, {\n    title: '12 Angry Men',\n    year: 1957\n  }, {\n    title: \"Schindler's List\",\n    year: 1993\n  }, {\n    title: 'Pulp Fiction',\n    year: 1994\n  }];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      id: \"free-solo-2-demo\",\n      disableClearable: true,\n      options: top100Films.map(option => option.title),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Search input\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 47\n      }, this),\n      children: [0, 1, 2, 3, 4, 5, 6, 4, 3, 3, 3, 3, 33, 3, 3, 3, 3, 3].map(value => {\n        const labelId = `checkbox-list-secondary-label-${value}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.orange,\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `Line item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"end\",\n              onChange: handleToggle(value),\n              checked: checked.indexOf(value) !== -1,\n              inputProps: {\n                'aria-labelledby': labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxListSecondary, \"XbC/dOvaPtgvS6rn7QFVAzPBVvA=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxListSecondary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxListSecondary\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/ScrollableList.js"],"names":["React","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","Checkbox","Avatar","Autocomplete","ListSubheader","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","overflow","maxHeight","orange","CheckboxListSecondary","classes","checked","setChecked","useState","top100Films","title","year","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","option","params","InputProps","type","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { ListSubheader } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow:\"auto\",\r\n    maxHeight:300\r\n  },\r\n  orange:{\r\n    backgroundColor:\"blue\"\r\n  }\r\n}));\r\n\r\nexport default function CheckboxListSecondary() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([1]);\r\n  const top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 },\r\n    { title: '12 Angry Men', year: 1957 },\r\n    { title: \"Schindler's List\", year: 1993 },\r\n    { title: 'Pulp Fiction', year: 1994 }]\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Autocomplete\r\n      freeSolo\r\n      id=\"free-solo-2-demo\"\r\n      disableClearable\r\n      options={top100Films.map((option) => option.title)}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Search input\"\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputProps={{ ...params.InputProps, type: 'search' }}\r\n        />\r\n      )}\r\n    />\r\n    <List className={classes.root} subheader={<li />}>\r\n      {[0,1,2,3,4,5,6,4,3,3,3,3,33,3,3,3,3,3].map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem key={value} button>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.orange}>B</Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}