{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\AssignPolicyToRole.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport ScrollableList from './ScrollableList';\nimport CreateAPolicy from './CreateAPolicy';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VAULT_TOKEN = \"s.fbOgHTAbdPGAU45jjFs6HKoI\";\nconst VAULT_URL = \"http://localhost:8200\";\n\nfunction AssignPolicyToRole(props) {\n  _s();\n\n  const [roleToPolicyCheckList, setrTPC] = React.useState([]);\n  const [policytoPolicyInfoCheckList, setPTPIC] = React.useState([]);\n  const [roleError, setRoleError] = React.useState(\"\");\n  const [policyError, setPolicyError] = React.useState(\"\");\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (policytoPolicyInfoCheckList.length == 0) {\n      setPolicyError(\"Must Select 1+ Policies\");\n      return;\n    } else {\n      setRoleError(\"\");\n    }\n\n    if (roleToPolicyCheckList.length == 0) {\n      setRoleError(\"Must Select 1+ Roles\");\n      return;\n    } else {\n      setRoleError(\"\");\n    } // const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\n    // const requestOptions = {\n    //     method:'POST',\n    //     body:JSON.stringify({\n    //                         policy:'#\\\\npath \\\\\"'+secretPath+'\\\\\" {\\\\n  capabilities = ['+ (mapToCapabilities[checkedCategories[0]]) + checkedCategories.map((e,i) => i > 0 && (\",\" + mapToCapabilities[e]))+']\\\\n}'}),\t\n    //     headers: {\n    //         'Content-type': 'application/json; charset=UTF-8'\n    //     }\n    // }\n    // await fetch('/policies?VAULT_TOKEN='+props.token+'&policyLabel='+nameOfPolicy, requestOptions)\n    //     .then(response => response.json())\n    //     .then(data => console.log(data));\n\n\n    props.refreshData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: \"left\",\n      marginLeft: 15,\n      marginBottom: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 30,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Assign Policies to Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"To assign a policy to a role, checkbox on the policies then checkbox on the roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Policies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 67\n          }, this), policyError != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              fontSize: 15\n            },\n            children: [\"  \", policyError]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 106\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), Object.keys(props.policytoPolicyInfo).length > 0 && /*#__PURE__*/_jsxDEV(ScrollableList, {\n          list: props.policytoPolicyInfo,\n          placeHolder: \"Search by Policy or Policy Info\",\n          setChecklist: setPTPIC,\n          searchDictionaryValues: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 63\n          }, this), roleError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: 15\n            },\n            children: roleError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 97\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), Object.keys(props.roleToPolicies).length > 0 && /*#__PURE__*/_jsxDEV(ScrollableList, {\n          list: props.roleToPolicies,\n          placeHolder: \"Search by Role or Policy\",\n          setChecklist: setrTPC,\n          searchDictionaryValues: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        width: 720\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          width: 100,\n          height: 40\n        },\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AssignPolicyToRole, \"yGkGxNnsyZRb5f5MFeXwjBPbfX8=\");\n\n_c = AssignPolicyToRole;\nexport default AssignPolicyToRole;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignPolicyToRole\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/AssignPolicyToRole.js"],"names":["React","useState","useEffect","ScrollableList","CreateAPolicy","Button","VAULT_TOKEN","VAULT_URL","AssignPolicyToRole","props","roleToPolicyCheckList","setrTPC","policytoPolicyInfoCheckList","setPTPIC","roleError","setRoleError","policyError","setPolicyError","handleSubmit","event","preventDefault","length","refreshData","textAlign","marginLeft","marginBottom","fontSize","color","fontWeight","display","flexDirection","marginTop","alignItems","Object","keys","policytoPolicyInfo","roleToPolicies","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport ScrollableList from './ScrollableList';\r\nimport CreateAPolicy from './CreateAPolicy';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst VAULT_TOKEN = \"s.fbOgHTAbdPGAU45jjFs6HKoI\"\r\nconst VAULT_URL = \"http://localhost:8200\"\r\nfunction AssignPolicyToRole(props) {\r\n    const [roleToPolicyCheckList,setrTPC] = React.useState([])\r\n    const [policytoPolicyInfoCheckList,setPTPIC] = React.useState([])\r\n    const [roleError,setRoleError] = React.useState(\"\")\r\n    const [policyError,setPolicyError] = React.useState(\"\")\r\n    async function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(policytoPolicyInfoCheckList.length == 0){setPolicyError(\"Must Select 1+ Policies\");return;}else{setRoleError(\"\")}\r\n        if(roleToPolicyCheckList.length == 0){setRoleError(\"Must Select 1+ Roles\");return;}else{setRoleError(\"\")}\r\n        // const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\r\n        // const requestOptions = {\r\n        //     method:'POST',\r\n        //     body:JSON.stringify({\r\n        //                         policy:'#\\\\npath \\\\\"'+secretPath+'\\\\\" {\\\\n  capabilities = ['+ (mapToCapabilities[checkedCategories[0]]) + checkedCategories.map((e,i) => i > 0 && (\",\" + mapToCapabilities[e]))+']\\\\n}'}),\t\r\n        //     headers: {\r\n        //         'Content-type': 'application/json; charset=UTF-8'\r\n        //     }\r\n        // }\r\n        // await fetch('/policies?VAULT_TOKEN='+props.token+'&policyLabel='+nameOfPolicy, requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(data => console.log(data));\r\n        props.refreshData();\r\n  }\r\n  return (\r\n      <div className=\"App\" style={{textAlign:\"left\",marginLeft:15,marginBottom:50}}>\r\n        <div style={{fontSize:30,color:\"black\",textAlign:\"left\",fontWeight:500}}>Assign Policies to Roles</div>\r\n          <div><i>To assign a policy to a role, checkbox on the policies then checkbox on the roles</i></div>\r\n          <div style={{display:\"flex\",flexDirection:\"row\",marginTop:5}}>\r\n            <div style={{alignItems:\"center\"}}>\r\n                <div style={{display:\"flex\",flexDirection:\"row\"}}><h5>Policies</h5>{policyError != \"\" && <div style={{color:\"red\",fontSize:15}}>{\"  \"}{policyError}</div>}</div>       \r\n                {Object.keys(props.policytoPolicyInfo).length > 0 && <ScrollableList list={props.policytoPolicyInfo} placeHolder={\"Search by Policy or Policy Info\"} setChecklist={setPTPIC} searchDictionaryValues={false}/>}\r\n            </div>\r\n            <div>\r\n            <div style={{display:\"flex\",flexDirection:\"row\"}}><h5>Roles</h5>{roleError != \"\" && <p style={{color:\"red\",fontSize:15}}>{roleError}</p>}</div>       \r\n            {Object.keys(props.roleToPolicies).length > 0 && <ScrollableList list={props.roleToPolicies} placeHolder={\"Search by Role or Policy\"} setChecklist={setrTPC} searchDictionaryValues={true}/>}\r\n            </div>\r\n          </div>\r\n          <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",width:720}}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40}} onClick={handleSubmit}>\r\n                  Submit\r\n            </Button>\r\n            </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AssignPolicyToRole;\r\n "]},"metadata":{},"sourceType":"module"}