{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\CreateAPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\";\nconst VAULT_URL = \"http://localhost:8200\";\n\nfunction CreateAPolicy(props) {\n  _s();\n\n  const [nameOfPolicy, setName] = React.useState(\"\");\n  const [secretPath, setSecretPath] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [secretPathError, setSecretError] = React.useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (nameOfPolicy == \"\") {\n      setNameError(\"There's an issue with the name\");\n      return;\n    }\n\n    if (secretPath == \"\") {\n      setSecretError(\"There's an issue with the policy\");\n      return;\n    }\n\n    setNameError(\"\");\n    setSecretError(\"\");\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        policy: \"# Dev servers have version 2 of KV secrets engine mounted by default, so will\\n# need these paths to grant permissions:\\npath \\\"secret/data/*\\\" {\\n  capabilities = [\\\"create\\\", \\\"update\\\"]\\n}\\n\"\n      },\n      VAULT_TOKEN: props.token,\n      policyLabel: nameOfPolicy\n    };\n    fetch('/policies', requestOptions).then(response => response.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 30,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Create/Update a Policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => handleSubmit(event),\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginLeft: 30,\n        height: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formToken\",\n        onChange: event => setName(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Name of Policy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), nameError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formToken\",\n        onChange: event => setSecretPath(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Secret Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"e.g. secret/foo/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), secretPathError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: secretPathError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          width: 100,\n          height: 40,\n          marginTop: 30\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateAPolicy, \"JzphzbHe7XAT22XYV2jlK4Wtxec=\");\n\n_c = CreateAPolicy;\nexport default CreateAPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAPolicy\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/CreateAPolicy.js"],"names":["React","useState","useEffect","Form","Button","VAULT_TOKEN","VAULT_URL","CreateAPolicy","props","nameOfPolicy","setName","secretPath","setSecretPath","nameError","setNameError","secretPathError","setSecretError","handleSubmit","event","preventDefault","requestOptions","method","headers","body","policy","token","policyLabel","fetch","then","response","json","data","console","log","fontSize","color","textAlign","fontWeight","display","flexDirection","marginLeft","height","target","value","marginRight","overflow","whiteSpace","width","marginTop"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\"\r\nconst VAULT_URL = \"http://localhost:8200\"\r\nfunction CreateAPolicy(props) {\r\n  const [nameOfPolicy,setName] = React.useState(\"\")\r\n  const [secretPath,setSecretPath] = React.useState(\"\")\r\n  const [nameError,setNameError] = React.useState(\"\")\r\n  const [secretPathError,setSecretError] = React.useState(\"\")\r\n  function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(nameOfPolicy == \"\"){setNameError(\"There's an issue with the name\");return;}\r\n        if(secretPath == \"\"){setSecretError(\"There's an issue with the policy\");return;}\r\n        setNameError(\"\");setSecretError(\"\");\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: { policy: \"# Dev servers have version 2 of KV secrets engine mounted by default, so will\\n# need these paths to grant permissions:\\npath \\\"secret/data/*\\\" {\\n  capabilities = [\\\"create\\\", \\\"update\\\"]\\n}\\n\" },\r\n            VAULT_TOKEN:props.token,\r\n            policyLabel:nameOfPolicy\r\n        };\r\n        fetch('/policies', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n  }\r\n\r\n  return (\r\n      <div >\r\n        <p style={{fontSize:30,color:\"black\",textAlign:\"left\",fontWeight:500}}>Create/Update a Policy</p>\r\n        <Form onSubmit={(event) => handleSubmit(event)} style={{display:\"flex\",flexDirection:\"row\",marginLeft:30,height:100}}>\r\n            <Form.Group controlId=\"formToken\" onChange={(event) => setName(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:30}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Name of Policy: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Enter Token\" />\r\n                {nameError != \"\" &&  <p style={{color:\"red\",fontSize:15}}>{nameError}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formToken\" onChange={(event) => setSecretPath(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:20}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Secret Path: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"e.g. secret/foo/*\" />\r\n                {secretPathError != \"\" &&  <p style={{color:\"red\",fontSize:15}}>{secretPathError}</p>}\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40,marginTop:30}}>\r\n                Submit\r\n            </Button>\r\n            {/* {error == true && <p style={{color:\"red\",fontSize:15}}>There was an error with the token. Try again.</p>} */}\r\n        </Form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CreateAPolicy;\r\n "]},"metadata":{},"sourceType":"module"}