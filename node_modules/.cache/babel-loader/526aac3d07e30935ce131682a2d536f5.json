{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\CreateAPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\";\nconst VAULT_URL = \"http://localhost:8200\";\n\nfunction CreateAPolicy(props) {\n  _s();\n\n  const [nameOfPolicy, setName] = React.useState(\"\");\n  const [secretPath, setSecretPath] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [secretPathError, setSecretError] = React.useState(\"\");\n  const [checkedCategories, setChecked] = React.useState([]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checkedCategories.indexOf(value);\n    const newChecked = [...checkedCategories];\n    alert(value);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    alert(newChecked);\n    setChecked(newChecked);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (nameOfPolicy == \"\") {\n      setNameError(\"There's an issue with the name\");\n      return;\n    }\n\n    if (secretPath == \"\") {\n      setSecretError(\"There's an issue with the policy\");\n      return;\n    }\n\n    setNameError(\"\");\n    setSecretError(\"\");\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        policy: '#\\\\npath \\\\\"' + secretPath + '\\\\\" {\\\\n  capabilities = [\\\\\"create\\\\\", \\\\\"update\\\\\"]\\\\n}'\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    };\n    await fetch('/policies?VAULT_TOKEN=' + props.token + '&policyLabel=' + nameOfPolicy, requestOptions).then(response => response.json()).then(data => console.log(data));\n    props.refreshData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 15\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 30,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Create/Update a Policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => handleSubmit(event),\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        height: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formToken\",\n        onChange: event => setName(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Name of Policy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), nameError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formToken\",\n        onChange: event => setSecretPath(event.target.value),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"left\",\n          marginRight: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Secret Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"e.g. secret/foo/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), secretPathError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: 15\n          },\n          children: secretPathError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [[0, 1].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 50,\n              textAlign: \"center\"\n            },\n            children: [value == 0 && \"Create\", value == 1 && \"Read\", value == 2 && \"Update\", value == 3 && \"Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checkedCategories.indexOf(value) !== -1,\n            onChange: () => handleToggle(value),\n            inputProps: {\n              'aria-label': 'primary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)), [2, 3].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 50,\n              textAlign: \"center\"\n            },\n            children: [value == 0 && \"Create\", value == 1 && \"Read\", value == 2 && \"Update\", value == 3 && \"Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checkedCategories.indexOf(value) !== -1,\n            onChange: () => {\n              alert(value);\n              handleToggle(value);\n            },\n            inputProps: {\n              'aria-label': 'primary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          width: 100,\n          height: 40,\n          marginTop: 30\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateAPolicy, \"0zhVx4ODNjJDayk+1KmMRvBgV10=\");\n\n_c = CreateAPolicy;\nexport default CreateAPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAPolicy\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/CreateAPolicy.js"],"names":["React","useState","useEffect","Form","Button","Checkbox","VAULT_TOKEN","VAULT_URL","CreateAPolicy","props","nameOfPolicy","setName","secretPath","setSecretPath","nameError","setNameError","secretPathError","setSecretError","checkedCategories","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","alert","push","splice","handleSubmit","event","preventDefault","requestOptions","method","body","JSON","stringify","policy","headers","fetch","token","then","response","json","data","console","log","refreshData","marginLeft","fontSize","color","textAlign","fontWeight","display","flexDirection","height","target","marginRight","overflow","whiteSpace","map","justifyContent","alignItems","width","marginTop"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst VAULT_TOKEN = \"s.TEQoESp3xzHI6vllru90ijVJ\"\r\nconst VAULT_URL = \"http://localhost:8200\"\r\nfunction CreateAPolicy(props) {\r\n  const [nameOfPolicy,setName] = React.useState(\"\")\r\n  const [secretPath,setSecretPath] = React.useState(\"\")\r\n  const [nameError,setNameError] = React.useState(\"\")\r\n  const [secretPathError,setSecretError] = React.useState(\"\")\r\n  const [checkedCategories,setChecked] = React.useState([])\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checkedCategories.indexOf(value);\r\n    const newChecked = [...checkedCategories];\r\n    alert(value)\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    alert(newChecked)\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  async function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(nameOfPolicy == \"\"){setNameError(\"There's an issue with the name\");return;}\r\n        if(secretPath == \"\"){setSecretError(\"There's an issue with the policy\");return;}\r\n        setNameError(\"\");setSecretError(\"\");\r\n        const requestOptions = {\r\n            method:'POST',\r\n            body:JSON.stringify({\r\n                                policy:'#\\\\npath \\\\\"'+secretPath+'\\\\\" {\\\\n  capabilities = [\\\\\"create\\\\\", \\\\\"update\\\\\"]\\\\n}'}),\t\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }\r\n        }\r\n        await fetch('/policies?VAULT_TOKEN='+props.token+'&policyLabel='+nameOfPolicy, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => console.log(data));\r\n        props.refreshData();\r\n  }\r\n\r\n  return (\r\n      <div style={{marginLeft:15}} >\r\n        <p style={{fontSize:30,color:\"black\",textAlign:\"left\",fontWeight:500}}>Create/Update a Policy</p>\r\n        <Form onSubmit={(event) => handleSubmit(event)} style={{display:\"flex\",flexDirection:\"row\",height:100}}>\r\n            <Form.Group controlId=\"formToken\" onChange={(event) => setName(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:30}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Name of Policy: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"Enter Name\" />\r\n                {nameError != \"\" &&  <p style={{color:\"red\",fontSize:15}}>{nameError}</p>}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formToken\" onChange={(event) => setSecretPath(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:20}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Secret Path: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control placeholder=\"e.g. secret/foo/*\" />\r\n                {secretPathError != \"\" &&  <p style={{color:\"red\",fontSize:15}}>{secretPathError}</p>}\r\n            </Form.Group>\r\n            <div style={{display:\"flex\",flexDirection:\"row\"}}>\r\n            {[0,1].map((value) => \r\n                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                    <div style={{width:50,textAlign:\"center\"}}>{value == 0 && \"Create\"}{value == 1 && \"Read\"}{value == 2 && \"Update\"}{value == 3 && \"Delete\"}</div>\r\n                    <Checkbox\r\n                        checked={checkedCategories.indexOf(value) !== -1}\r\n                        onChange={() => handleToggle(value)}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                    />\r\n                </div>)}\r\n            {[2,3].map((value) => \r\n                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                    <div style={{width:50,textAlign:\"center\"}}>{value == 0 && \"Create\"}{value == 1 && \"Read\"}{value == 2 && \"Update\"}{value == 3 && \"Delete\"}</div>\r\n                    <Checkbox\r\n                        checked={checkedCategories.indexOf(value) !== -1}\r\n                        onChange={() => {alert(value);handleToggle(value)}}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                    />\r\n                </div>)}\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40,marginTop:30}}>\r\n                Submit\r\n            </Button>\r\n            {/* {error == true && <p style={{color:\"red\",fontSize:15}}>There was an error with the token. Try again.</p>} */}\r\n        </Form>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CreateAPolicy;\r\n "]},"metadata":{},"sourceType":"module"}