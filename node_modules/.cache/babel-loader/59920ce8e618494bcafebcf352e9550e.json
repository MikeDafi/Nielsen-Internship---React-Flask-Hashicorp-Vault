{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\AssignPolicyToRole.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport ScrollableList from './ScrollableList';\nimport CreateAPolicy from './CreateAPolicy';\nimport Button from 'react-bootstrap/Button';\nimport ReactLoading from 'react-loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VAULT_TOKEN = \"s.fbOgHTAbdPGAU45jjFs6HKoI\";\nconst VAULT_URL = \"http://localhost:8200\";\n\nfunction AssignPolicyToRole(props) {\n  _s();\n\n  const [roleToPolicyCheckList, setrTPC] = React.useState([]);\n  const [policytoPolicyInfoCheckList, setPTPIC] = React.useState([]);\n  const [roleError, setRoleError] = React.useState(\"\");\n  const [policyError, setPolicyError] = React.useState(\"\");\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (policytoPolicyInfoCheckList.length == 0) {\n      setPolicyError(\"Must Select 1+ Policies\");\n      return;\n    } else {\n      setPolicyError(\"\");\n    }\n\n    if (roleToPolicyCheckList.length == 0) {\n      setRoleError(\"Must Select 1+ Roles\");\n      return;\n    } else {\n      setRoleError(\"\");\n    } // const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\n\n\n    const value = policytoPolicyInfoCheckList.toString();\n    setrTPC([]);\n    setPTPIC([]);\n\n    for (var i = 0; i < roleToPolicyCheckList.length; ++i) {\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify({\n          policies: value\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      };\n      await fetch('/auth?VAULT_TOKEN=' + props.token + `&auth_method=approle&role=` + roleToPolicyCheckList[i], requestOptions).then(response => response.json()).then(data => console.log(data));\n    }\n\n    props.refreshData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"left\",\n      marginLeft: 15,\n      marginBottom: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 30,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Assign Policies to Roles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"To assign a policy to a role, checkbox on the policies then checkbox on the roles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Policies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 87\n          }, this), policyError != \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              fontSize: 15,\n              marginBottom: 5\n            },\n            children: policyError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 126\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), Object.keys(props.policytoPolicyInfo).length > 0 && /*#__PURE__*/_jsxDEV(ScrollableList, {\n          list: props.policytoPolicyInfo,\n          placeHolder: \"Search by Policy or Policy Info\",\n          setChecked: setPTPIC,\n          searchDictionaryValues: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 83\n          }, this), roleError != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: 15,\n              marginBottom: 5\n            },\n            children: roleError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 117\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), Object.keys(props.roleToPolicies).length > 0 && /*#__PURE__*/_jsxDEV(ScrollableList, {\n          list: props.roleToPolicies,\n          placeHolder: \"Search by Role or Policy\",\n          setChecked: setrTPC,\n          searchDictionaryValues: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        width: 720\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        style: {\n          width: 100,\n          height: 40\n        },\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          justifyContent: \"absolute\",\n          alignItems: \"center\",\n          marginTop: -200,\n          marginLeft: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(ReactLoading, {\n          type: \"spin\",\n          color: \"blue\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AssignPolicyToRole, \"yGkGxNnsyZRb5f5MFeXwjBPbfX8=\");\n\n_c = AssignPolicyToRole;\nexport default AssignPolicyToRole;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignPolicyToRole\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/AssignPolicyToRole.js"],"names":["React","useState","useEffect","ScrollableList","CreateAPolicy","Button","ReactLoading","VAULT_TOKEN","VAULT_URL","AssignPolicyToRole","props","roleToPolicyCheckList","setrTPC","policytoPolicyInfoCheckList","setPTPIC","roleError","setRoleError","policyError","setPolicyError","handleSubmit","event","preventDefault","length","value","toString","i","requestOptions","method","body","JSON","stringify","policies","headers","fetch","token","then","response","json","data","console","log","refreshData","textAlign","marginLeft","marginBottom","fontSize","color","fontWeight","display","flexDirection","marginTop","alignItems","Object","keys","policytoPolicyInfo","roleToPolicies","justifyContent","width","height","position"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport ScrollableList from './ScrollableList';\r\nimport CreateAPolicy from './CreateAPolicy';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReactLoading from 'react-loading'\r\n\r\nconst VAULT_TOKEN = \"s.fbOgHTAbdPGAU45jjFs6HKoI\"\r\nconst VAULT_URL = \"http://localhost:8200\"\r\nfunction AssignPolicyToRole(props) {\r\n    const [roleToPolicyCheckList,setrTPC] = React.useState([])\r\n    const [policytoPolicyInfoCheckList,setPTPIC] = React.useState([])\r\n    const [roleError,setRoleError] = React.useState(\"\")\r\n    const [policyError,setPolicyError] = React.useState(\"\")\r\n    async function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(policytoPolicyInfoCheckList.length == 0){setPolicyError(\"Must Select 1+ Policies\");return;}else{setPolicyError(\"\")}\r\n        if(roleToPolicyCheckList.length == 0){setRoleError(\"Must Select 1+ Roles\");return;}else{setRoleError(\"\")}\r\n        // const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\r\n        const value = policytoPolicyInfoCheckList.toString()\r\n        setrTPC([])\r\n        setPTPIC([])\r\n        for(var i = 0; i < roleToPolicyCheckList.length;++i){\r\n            const requestOptions = {\r\n                method:'POST',\r\n                body:JSON.stringify({\r\n                                    policies:value}),\t\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8'\r\n                }\r\n            }\r\n            await fetch('/auth?VAULT_TOKEN='+props.token+`&auth_method=approle&role=`+ roleToPolicyCheckList[i], requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => console.log(data));\r\n        }\r\n        props.refreshData();\r\n  }\r\n  return (\r\n      <div style={{textAlign:\"left\",marginLeft:15,marginBottom:50}}>\r\n        <div style={{fontSize:30,color:\"black\",textAlign:\"left\",fontWeight:500}}>Assign Policies to Roles</div>\r\n          <div><i>To assign a policy to a role, checkbox on the policies then checkbox on the roles</i></div>\r\n          <div style={{display:\"flex\",flexDirection:\"row\",marginTop:5}}>\r\n            <div>\r\n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}><h5>Policies</h5>{policyError != \"\" && <div style={{color:\"red\",fontSize:15,marginBottom:5}}>{policyError}</div>}</div>       \r\n                {Object.keys(props.policytoPolicyInfo).length > 0 && <ScrollableList list={props.policytoPolicyInfo} placeHolder={\"Search by Policy or Policy Info\"} setChecked={setPTPIC} searchDictionaryValues={false}/>}\r\n            </div>\r\n            <div>\r\n            <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}><h5>Roles</h5>{roleError != \"\" && <p style={{color:\"red\",fontSize:15,marginBottom:5}}>{roleError}</p>}</div>       \r\n            {Object.keys(props.roleToPolicies).length > 0 && <ScrollableList list={props.roleToPolicies} placeHolder={\"Search by Role or Policy\"} setChecked={setrTPC} searchDictionaryValues={true}/>}\r\n            </div>\r\n          </div>\r\n          <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",width:720}}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40}} onClick={handleSubmit}>\r\n                  Submit\r\n          </Button>\r\n          <div style={{position:\"absolute\",justifyContent:\"absolute\",alignItems:\"center\",marginTop:-200,marginLeft:20}}>\r\n          <ReactLoading type={\"spin\"} color={\"blue\"} height={50} width={50} />\r\n          <h6>Loading</h6>\r\n          </div>\r\n          </div>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AssignPolicyToRole;\r\n "]},"metadata":{},"sourceType":"module"}