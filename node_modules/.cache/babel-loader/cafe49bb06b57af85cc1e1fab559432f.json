{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\CreateAPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ConfirmationMessage from './ConfirmationMessage';\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAPolicy(props) {\n  _s();\n\n  const [nameOfPolicy, setName] = React.useState(\"\");\n  const [secretPath, setSecretPath] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [secretPathError, setSecretError] = React.useState(\"\");\n  const [checkedError, setCheckedError] = React.useState(\"\");\n  const [checkedCategories, setChecked] = React.useState([]);\n  const [answer, setAnswer] = React.useState(false);\n  const [confirmationVisible, setConVisible] = React.useState(false);\n\n  const handleToggle = value => {\n    const currentIndex = checkedCategories.indexOf(value);\n    const newChecked = [...checkedCategories];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  async function handleSubmit() {\n    if (nameOfPolicy === \"\") {\n      setNameError(\"There's an issue with the name\");\n      return;\n    } else {\n      setNameError(\"\");\n    }\n\n    if (secretPath === \"\") {\n      setSecretError(\"There's an issue with the policy\");\n      return;\n    } else {\n      setSecretError(\"\");\n    }\n\n    if (checkedCategories.length === 0) {\n      setCheckedError(\"You must select at least one permission\");\n      return;\n    } else {\n      setCheckedError(\"\");\n    }\n\n    const mapToCapabilities = {\n      0: '\\\\\"create\\\\\"',\n      1: '\\\\\"read\\\\\"',\n      2: '\\\\\"update\\\\\"',\n      3: '\\\\\"delete\\\\\"'\n    };\n    const requestOptions = {\n      method: 'POST',\n      body: JSON.stringify({\n        policy: '#\\\\npath \\\\\"' + secretPath + '\\\\\" {\\\\n  capabilities = [' + mapToCapabilities[checkedCategories[0]] + checkedCategories.map((e, i) => i > 0 ? mapToCapabilities[e] : \"\") + ']\\\\n}'\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    };\n    await fetch('/policies?VAULT_TOKEN=' + props.token + '&policyLabel=' + nameOfPolicy, requestOptions);\n    props.refreshData();\n    setName(\"\");\n    setSecretPath(\"\");\n    setChecked([]);\n  } // useEffect(()=>{\n  //     if(answer){handleSubmit()}\n  //     setConVisible(false)\n  // },[setAnswer])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"95vw\",\n      height: \"80vh\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 50,\n        color: \"black\",\n        textAlign: \"left\",\n        fontWeight: 500\n      },\n      children: \"Create a Policy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"95vw\",\n        height: \"80vh\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: () => setConVisible(true),\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"policyInput\",\n          onChange: event => setName(event.target.value),\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            textAlign: \"left\",\n            marginRight: 30\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                color: \"black\",\n                marginRight: 15\n              },\n              children: \"Name of Policy:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: nameOfPolicy,\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), nameError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: 15\n            },\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 39\n          }, this)]\n        }, \"policyInput\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"pathInput\",\n          onChange: event => setSecretPath(event.target.value),\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            textAlign: \"left\",\n            marginRight: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n                color: \"black\",\n                marginRight: 15\n              },\n              children: \"Secret Path:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"e.g. secret/foo/*\",\n            value: secretPath,\n            onChange: event => setSecretPath(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), secretPathError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: 15\n            },\n            children: secretPathError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this)]\n        }, \"pathInput\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              color: \"black\",\n              marginRight: 15\n            },\n            children: \"Secret Permissions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\"\n            },\n            children: [[0, 1].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 50,\n                  textAlign: \"center\"\n                },\n                children: [value === 0 && \"Create\", value === 1 && \"Read\", value === 2 && \"Update\", value === 3 && \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checkedCategories.indexOf(value) !== -1,\n                onChange: () => handleToggle(value),\n                inputProps: {\n                  'aria-label': 'primary checkbox'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)), [2, 3].map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 50,\n                  textAlign: \"center\"\n                },\n                children: [value === 0 && \"Create\", value === 1 && \"Read\", value === 2 && \"Update\", value === 3 && \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checkedCategories.indexOf(value) !== -1,\n                onChange: () => {\n                  handleToggle(value);\n                },\n                inputProps: {\n                  'aria-label': 'primary checkbox'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), checkedError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              fontSize: 15\n            },\n            children: checkedError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          style: {\n            width: 100,\n            height: 40,\n            marginTop: 30\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), confirmationVisible && /*#__PURE__*/_jsxDEV(ConfirmationMessage, {\n      message: \"create a policy\",\n      setAnswer: setAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CreateAPolicy, \"I5srx6wnZualzou1Ec4ZLsgwtac=\");\n\n_c = CreateAPolicy;\nexport default CreateAPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAPolicy\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/CreateAPolicy.js"],"names":["React","useEffect","useState","Form","Button","Checkbox","ConfirmationMessage","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","CreateAPolicy","props","nameOfPolicy","setName","secretPath","setSecretPath","nameError","setNameError","secretPathError","setSecretError","checkedError","setCheckedError","checkedCategories","setChecked","answer","setAnswer","confirmationVisible","setConVisible","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleSubmit","length","mapToCapabilities","requestOptions","method","body","JSON","stringify","policy","map","e","i","headers","fetch","token","refreshData","display","flexDirection","width","height","alignItems","fontSize","color","textAlign","fontWeight","event","target","marginRight","overflow","whiteSpace","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ConfirmationMessage from './ConfirmationMessage';\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\r\nfunction CreateAPolicy(props) {\r\n  const [nameOfPolicy,setName] = React.useState(\"\")\r\n  const [secretPath,setSecretPath] = React.useState(\"\")\r\n  const [nameError,setNameError] = React.useState(\"\")\r\n  const [secretPathError,setSecretError] = React.useState(\"\")\r\n  const [checkedError,setCheckedError] = React.useState(\"\")\r\n  const [checkedCategories,setChecked] = React.useState([])\r\n  const [answer,setAnswer] = React.useState(false);\r\n  const [confirmationVisible,setConVisible] = React.useState(false)\r\n\r\n  const handleToggle = (value) => {\r\n    const currentIndex = checkedCategories.indexOf(value);\r\n    const newChecked = [...checkedCategories];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n\r\n    async function handleSubmit(){\r\n        if(nameOfPolicy === \"\"){setNameError(\"There's an issue with the name\");return;}else{setNameError(\"\")}\r\n        if(secretPath === \"\"){setSecretError(\"There's an issue with the policy\");return;}else{setSecretError(\"\")}\r\n        if(checkedCategories.length === 0){setCheckedError(\"You must select at least one permission\");return;}else{setCheckedError(\"\")}\r\n        const mapToCapabilities = {0:'\\\\\"create\\\\\"',1:'\\\\\"read\\\\\"',2:'\\\\\"update\\\\\"',3:'\\\\\"delete\\\\\"'}\r\n        const requestOptions = {\r\n            method:'POST',\r\n            body:JSON.stringify({\r\n                                policy:'#\\\\npath \\\\\"'+secretPath+'\\\\\" {\\\\n  capabilities = ['+ (mapToCapabilities[checkedCategories[0]]) + checkedCategories.map((e,i) => i > 0 ? (mapToCapabilities[e]) : \"\")+']\\\\n}'}),\t\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8'\r\n            }\r\n        }\r\n        await fetch('/policies?VAULT_TOKEN='+props.token+'&policyLabel='+nameOfPolicy, requestOptions)\r\n        props.refreshData();\r\n        setName(\"\")\r\n        setSecretPath(\"\")\r\n        setChecked([])\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     if(answer){handleSubmit()}\r\n    //     setConVisible(false)\r\n    // },[setAnswer])\r\n\r\n  return (\r\n      <div style={{display:\"flex\",flexDirection:\"column\",width:\"95vw\",height:\"80vh\",alignItems:\"center\"}} >\r\n        <p style={{fontSize:50,color:\"black\",textAlign:\"left\",fontWeight:500}}>Create a Policy</p>\r\n        <div style={{display:\"flex\",flexDirection:\"column\",width:\"95vw\",height:\"80vh\",alignItems:\"center\"}}>\r\n        <Form onSubmit={() => setConVisible(true)} style={{display:\"flex\",flexDirection:\"column\",height:100}}>\r\n            <Form.Group key={\"policyInput\"}controlId=\"policyInput\" onChange={(event) => setName(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:30}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Name of Policy: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={nameOfPolicy}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                />\r\n                {nameError !== \"\" &&  <p style={{color:\"red\",fontSize:15}}>{nameError}</p>}\r\n            </Form.Group>\r\n            <Form.Group key={\"pathInput\"} controlId=\"pathInput\" onChange={(event) => setSecretPath(event.target.value)}style={{display:\"flex\",flexDirection:\"column\",textAlign:\"left\",marginRight:20}}>\r\n                <Form.Label>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                Secret Path: \r\n                </div>\r\n                </Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"e.g. secret/foo/*\"\r\n                    value={secretPath}\r\n                    onChange={(event) => setSecretPath(event.target.value)}\r\n                />\r\n                {secretPathError !== \"\" &&  <p style={{color:\"red\",fontSize:15}}>{secretPathError}</p>}\r\n            </Form.Group>\r\n            <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                <div style={{overflow:\"hidden\",whiteSpace:\"nowrap\",color:\"black\",marginRight:15}}>\r\n                    Secret Permissions: \r\n                </div>\r\n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\r\n                {[0,1].map((value) => \r\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                        <div style={{width:50,textAlign:\"center\"}}>{value === 0 && \"Create\"}{value === 1 && \"Read\"}{value === 2 && \"Update\"}{value === 3 && \"Delete\"}</div>\r\n                        <Checkbox\r\n                            checked={checkedCategories.indexOf(value) !== -1}\r\n                            onChange={() => handleToggle(value)}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>)}\r\n                {[2,3].map((value) => \r\n                    <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\"}}>\r\n                        <div style={{width:50,textAlign:\"center\"}}>{value === 0 && \"Create\"}{value === 1 && \"Read\"}{value === 2 && \"Update\"}{value === 3 && \"Delete\"}</div>\r\n                        <Checkbox\r\n                            checked={checkedCategories.indexOf(value) !== -1}\r\n                            onChange={() => {handleToggle(value)}}\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                    </div>)}\r\n                </div>\r\n                {checkedError !== \"\" &&  <p style={{color:\"red\",fontSize:15}}>{checkedError}</p>}\r\n\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" style={{width:100,height:40,marginTop:30}}>\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n      </div>\r\n      {confirmationVisible && <ConfirmationMessage message={\"create a policy\"} setAnswer={setAnswer}/>}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CreateAPolicy;\r\n "]},"metadata":{},"sourceType":"module"}