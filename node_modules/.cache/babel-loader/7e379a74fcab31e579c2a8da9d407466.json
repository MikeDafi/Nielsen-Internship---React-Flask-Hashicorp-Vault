{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miasknda2101\\\\Documents\\\\React-Flask-Hashicorp-App\\\\my-app\\\\src\\\\ScrollableList.js\",\n    _s = $RefreshSig$();\n\nimport logo from './Nielsenlogo.jpg';\nimport React, { useState, useStyles } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, Checkbox } from '@material-ui/core';\nimport { FixedSizeList } from 'react-window';\nimport { coerce } from 'yargs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ScrollableList() {\n  _s();\n\n  const items = [{\n    'id': 'id1',\n    'message': 'message1'\n  }, {\n    'id': 'id2',\n    'message': 'message2'\n  }, {\n    'id': 'id3',\n    'message': 'message3'\n  }, {\n    'id': 'id1',\n    'message': 'message1'\n  }, {\n    'id': 'id2',\n    'message': 'message2'\n  }, {\n    'id': 'id3',\n    'message': 'message3'\n  }, {\n    'id': 'id1',\n    'message': 'message1'\n  }, {\n    'id': 'id2',\n    'message': 'message2'\n  }, {\n    'id': 'id3',\n    'message': 'message3'\n  }, {\n    'id': 'id1',\n    'message': 'message1'\n  }, {\n    'id': 'id2',\n    'message': 'message2'\n  }, {\n    'id': 'id3',\n    'message': 'message3'\n  }];\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([1]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"blue\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 400,\n      width: 300,\n      itemSize: 46,\n      itemCount: 200,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classes.root,\n        children: [0, 1, 2, 3].map(value => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: `Avatar n°${value + 1}`,\n                src: `/static/images/avatar/${value + 1}.jpg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `Line item ${value + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"end\",\n                onChange: handleToggle(value),\n                checked: checked.indexOf(value) !== -1,\n                inputProps: {\n                  'aria-labelledby': labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ScrollableList, \"XbC/dOvaPtgvS6rn7QFVAzPBVvA=\", false, function () {\n  return [useStyles];\n});\n\n_c = ScrollableList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableList\");","map":{"version":3,"sources":["C:/Users/miasknda2101/Documents/React-Flask-Hashicorp-App/my-app/src/ScrollableList.js"],"names":["logo","React","useState","useStyles","Form","Button","List","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","Checkbox","FixedSizeList","coerce","ScrollableList","items","classes","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","backgroundColor","justifyContent","alignItems","root","map","labelId"],"mappings":"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","sourcesContent":["import logo from './Nielsenlogo.jpg';\r\nimport React,{useState,useStyles} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\n\r\nimport {List,ListItem,ListItemAvatar,Avatar,ListItemText,ListItemSecondaryAction,Checkbox} from '@material-ui/core';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { coerce } from 'yargs';\r\n\r\nexport default function ScrollableList() {\r\n const items = [{'id': 'id1','message':'message1'},{'id': 'id2','message':'message2'},{'id': 'id3','message':'message3'},{'id': 'id1','message':'message1'},{'id': 'id2','message':'message2'},{'id': 'id3','message':'message3'},{'id': 'id1','message':'message1'},{'id': 'id2','message':'message2'},{'id': 'id3','message':'message3'},{'id': 'id1','message':'message1'},{'id': 'id2','message':'message2'},{'id': 'id3','message':'message3'}]\r\n const classes = useStyles();\r\n const [checked, setChecked] = React.useState([1]);\r\n\r\n const handleToggle = (value) => () => {\r\n   const currentIndex = checked.indexOf(value);\r\n   const newChecked = [...checked];\r\n\r\n   if (currentIndex === -1) {\r\n     newChecked.push(value);\r\n   } else {\r\n     newChecked.splice(currentIndex, 1);\r\n   }\r\n\r\n   setChecked(newChecked);\r\n };\r\n \r\n return (\r\n      <div style={{backgroundColor:\"blue\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n      <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}>\r\n      <List dense className={classes.root}>\r\n      {[0, 1, 2, 3].map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem key={value} button>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={`Avatar n°${value + 1}`}\r\n                src={`/static/images/avatar/${value + 1}.jpg`}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\r\n            <ListItemSecondaryAction>\r\n              <Checkbox\r\n                edge=\"end\"\r\n                onChange={handleToggle(value)}\r\n                checked={checked.indexOf(value) !== -1}\r\n                inputProps={{ 'aria-labelledby': labelId }}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n      </FixedSizeList>\r\n      </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}